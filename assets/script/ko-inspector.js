ko.bindingHandlers.inspect={bindingHandler:{},init:function(element,valueAccessor,allBindingsAccessor){if(koInspector.elementId===undefined||element.id===koInspector.elementId){this.bindingHandler=new koInspector.BindingHandler(element,valueAccessor,allBindingsAccessor);var guid=koInspector.guid.create();koInspector.elementId="ko-inspector-"+guid;element.id=koInspector.elementId;document.body.addEventListener("click",koInspector.renderer.onToggle,false);if(allBindingsAccessor().pinToTop){koInspector.renderer.pinToTop(element,allBindingsAccessor().pinToTop)}this.bindingHandler.addStyle()}else{console.log("ko-inspector: only one inspect allowed")}},update:function(element,valueAccessor,allBindingsAccessor){if(koInspector.elementId===undefined||element.id===koInspector.elementId){this.bindingHandler.compare(valueAccessor());var jsonHtml=this.bindingHandler.render();element.innerHTML=jsonHtml;this.bindingHandler.setState()}}};var scripts=document.getElementsByTagName("script");var thisScriptTag=document.getElementsByTagName("script")[scripts.length-1];var script;var settings;for(var i=scripts.length-1;i>=0;i--){if(scripts[i].getAttribute("data-inspect")){script=scripts[i];settings=eval("settings = {"+scripts[i].getAttribute("data-inspect")+"}")}}if(settings&&settings.observable){var dataBindString="inspect: "+settings.observable;if(settings.pinToTop){dataBindString+=", pinToTop: '"+settings.pinToTop+"'"}var div=document.createElement("div");div.setAttribute("data-bind",dataBindString);script.parentNode.insertBefore(div,script.nextSibling)}if(typeof koInspector=="undefined"){koInspector={}}koInspector.elementId;koInspector.BindingHandler=function(element,valueAccessor,allBindingsAccessor){var comparer=koInspector.Comparer(),rootName=function(){var propertyString=allBindingsAccessor()._ko_property_writers.inspect.toString();propertyString=propertyString.substring(24).replace(" = __ko_value; }","");return propertyString},addStyle=function(){if(document.getElementById("ko-inspector-css")===null){var style=document.createElement("style");style.type="text/css";style.rel="stylesheet";style.innerHTML=koInspector.css;style.id="ko-inspector-css";document.getElementsByTagName("head")[0].appendChild(style)}},render=function(){return koInspector.renderer.jsonToHtml(this.object,this.rootName())};return{rootName:rootName,addStyle:addStyle,compare:comparer.compare,object:comparer.object,render:render,setState:koInspector.renderer.setState}};if(typeof koInspector=="undefined"){koInspector={}}koInspector.Comparer=function(){var storedObject={},addDirtyFlags=function(newObject){for(p in newObject){if(ko.isObservable(newObject[p])){if(typeof newObject[p].isDirty==="undefined"){newObject[p].isDirty=new koInspector.DirtyFlag(newObject[p])}}var unwrapped=ko.utils.unwrapObservable(newObject[p]);if(isObject(unwrapped)){addDirtyFlags(unwrapped)}}},isObject=function(object){return object&&typeof object==="object"&&typeof object.getMonth==="undefined"},resetDirtyFlag=function(object){object.isDirty(false)},compare=function(newObject){addDirtyFlags(ko.utils.unwrapObservable(newObject));recurse(ko.utils.unwrapObservable(newObject),this.object)},recurse=function(newObject,object){for(p in newObject){if(ko.isObservable(newObject[p])){var unwrapped=ko.utils.unwrapObservable(newObject[p]);if(object[p]){if(isObject(object[p].value)){if(newObject[p].isDirty()){resetDirtyFlag(newObject[p]);object[p].count++;object[p].value={}}recurse(unwrapped,object[p].value)}else{if(newObject[p].isDirty()){resetDirtyFlag(newObject[p]);object[p].count++;object[p].value=unwrapped;object[p].isObservable=true}}if(object[p]){object[p].subscribers=ko.isObservable(newObject[p])?newObject[p].getSubscriptionsCount():0}}else{var unwrapped=ko.utils.unwrapObservable(newObject[p]);parseObject(unwrapped,newObject,object,p)}}else{if(object[p]){updateObject(newObject[p],newObject,object,p)}else{parseObject(newObject[p],newObject,object,p)}}}},updateObject=function(unwrapped,newObject,object,p){if(isObject(object[p].value)){recurse(newObject[p],object[p].value)}else{if(object[p].value!==newObject[p]){object[p].count++;object[p].value=newObject[p];object[p].isObservable=false}}},parseObject=function(unwrapped,newObject,object,p){if(isObject(unwrapped)){object[p]={value:{},count:0,isObservable:ko.isObservable(newObject[p]),subscribers:ko.isObservable(newObject[p])?newObject[p].getSubscriptionsCount():0,guid:koInspector.guid.create()};recurse(unwrapped,object[p].value)}else{object[p]={value:unwrapped,count:0,isObservable:ko.isObservable(newObject[p]),subscribers:ko.isObservable(newObject[p])?newObject[p].getSubscriptionsCount():0}}};return{compare:compare,object:storedObject,addDirtyFlags:addDirtyFlags}};if(typeof koInspector=="undefined"){koInspector={}}koInspector.css='.ko-inspector {    white-space: normal !important;    font-family: monospace;    display: inline-block;}    .ko-inspector ul {        list-style-type: none;        padding: 0;        margin: 0 0 0 26px;    }    .ko-inspector li {        position: relative;    }    .ko-inspector .hoverable {        transition: background-color .2s ease-out 0;        -webkit-transition: background-color .2s ease-out 0;        display: inline-block;    }    .ko-inspector .hovered {        transition-delay: .2s;        -webkit-transition-delay: .2s;    }    .ko-inspector .selected {        outline-style: solid;        outline-width: 1px;        outline-style: dotted;    }    .ko-inspector .collapsed > .collapsible {        display: none;    }    .ko-inspector .ellipsis {        display: none;    }    .ko-inspector .collapsed > .ellipsis {        display: inherit;    }    .ko-inspector .collapser {        position: absolute;        top: 1px;        left: -1.5em;        cursor: default;        user-select: none;        -webkit-user-select: none;    }    .ko-inspector .property {        font-weight: bold;    }.ko-inspector .property.nonObservable {color: #808080;font-weight: normal;}    .ko-inspector .type-null {        color: gray;    }    .ko-inspector .type-boolean {    color: firebrick;    }    .ko-inspector .type-number {        color: blue;    }    .ko-inspector .type-string {        color: green;    }    .ko-inspector .callback-function {        color: gray;    }    .ko-inspector .collapser:after {        content: "-";    }    .ko-inspector .collapsed > .collapser:after {        content: "+";    }    .ko-inspector .ellipsis:after {        content: " ... ";    }    .ko-inspector .collapsible {        margin-left: 1.4em;    }    .ko-inspector .hoverable {        padding-top: 1px;        padding-bottom: 1px;        padding-left: 2px;        padding-right: 2px;        border-radius: 2px;    }    .ko-inspector .hovered {        background-color: #ebeef9;    }    .ko-inspector .collapser {        padding-right: 6px;        padding-left: 6px;        cursor: pointer;    }    .ko-inspector .change-counter {        background: firebrick;        color: #FFF;        padding: 1px;        margin-right: 2px;    }    .ko-inspector .subscriber-counter {        background: green;        color: #FFF;        padding: 1px;        margin-right: 2px;    }';if(typeof koInspector=="undefined"){koInspector={}}koInspector.DirtyFlag=function(root){var isDirty=ko.observable(false);root.subscribe(function(){if(!isDirty()){isDirty(true)}});return isDirty};if(typeof koInspector=="undefined"){koInspector={}}koInspector.renderer=function(){var state={},htmlEncode=function(t){return t!=null?t.toString().replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;"):""},decorateWithSpan=function(value,className){return'<span class="'+className+'">'+htmlEncode(value)+"</span>"},getValue=function(value){if(value&&value.hasOwnProperty("value"))return value;else return{value:value,count:0}},valueToHtml=function(value){value=getValue(value);var valueType=typeof value.value,output="";if(value.value==null)output+=decorateWithSpan("null","type-null");else if(value.value&&value.value.constructor==Array)output+=arrayToHtml(value.value,value.guid);else if(valueType=="object"&&value.value.getMonth)output+=stringToHtml(value.value.toString());else if(valueType=="object")output+=objectToHtml(value.value,value.guid);else if(valueType=="number")output+=decorateWithSpan(value.value,"type-number");else if(valueType=="string")output+=stringToHtml(value.value);else if(valueType=="boolean")output+=decorateWithSpan(value.value,"type-boolean");else if(valueType=="function")output+=decorateWithSpan("function() {  }","type-callback-function");return output},stringToHtml=function(value){var output="";if(/^(http|https):\/\/[^\s]+$/.test(value))output+=decorateWithSpan('"',"type-string")+'<a href="'+value+'">'+htmlEncode(value)+"</a>"+decorateWithSpan('"',"type-string");else output+=decorateWithSpan('"'+value+'"',"type-string");return output},arrayToHtml=function(json,guid){var i,length,output='<div data-collapser="ko-inspector-'+guid+'" class="collapser "></div>[<span class="ellipsis"></span><ul class="array collapsible">',hasContents=false;for(i=0,length=json.length;i<length;i++){hasContents=true;output+='<li><div class="hoverable">';output+=valueToHtml(json[i]);if(i<length-1)output+=",";output+="</div></li>"}output+="</ul>]";if(!hasContents)output="[ ]";return output},objectToHtml=function(json,guid){var i,key,length,keys=Object.keys(json),output='<div data-collapser="ko-inspector-'+guid+'" class="collapser';output+='"></div>{<span class="ellipsis"></span><ul class="obj collapsible">',hasContents=false;for(i=0,length=keys.length;i<length;i++){key=keys[i];hasContents=true;if(json[key]&&json[key].hasOwnProperty("isObservable")&&json[key].isObservable)output+='<li><div class="hoverable">';else output+='<li><div class="hoverable nonObservable">';if(json[key]&&json[key].hasOwnProperty("count")&&json[key].count>0)output+='<span class="change-counter">'+json[key].count+"</span>";if(json[key]&&json[key].hasOwnProperty("subscribers")&&Number(json[key].subscribers)-2>0)output+='<span class="subscriber-counter">'+(Number(json[key].subscribers)-2)+"</span>";var css="property "+(json[key]&&json[key].isObservable?"":"nonObservable");output+='<span class="'+css+'">'+htmlEncode(key)+"</span>: ";output+=valueToHtml(json[key]);if(i<length-1)output+=",";output+="</div></li>"}output+="</ul>}";if(!hasContents)output="{ }";return output},jsonToHtml=function(json,root){var output="";output+='<div class="ko-inspector">';output+='<ul class="obj collapsible"><li><div class="hoverable"><span class="property">'+root+"</span>: ";output+=valueToHtml(json);output+="</div></li></ul>";output+="</div>";return output},pinToTop=function(element,location){element.style.position="absolute";element.style.top=0;if(location==="left"){element.style.left=0}else{element.style.right=0}element.style.background="#FFF";element.style.border="solid 1px #000";element.style["-moz-box-shadow"]="4px 4px 4px 0 #CCC";element.style["-webkit-box-shadow"]="4px 4px 4px 0 #CCC";element.style["box-shadow"]="4px 4px 4px 0 #CCC"},onToggle=function(event){var collapsed,target=event.target;if(event.target.className=="collapser"){var guid=event.target.getAttribute("data-collapser");collapsed=target.parentNode.getElementsByClassName("collapsible")[0];if(collapsed.parentNode.classList.contains("collapsed")){state[guid]="";collapsed.parentNode.classList.remove("collapsed")}else{state[guid]="collapsed";collapsed.parentNode.classList.add("collapsed")}}},setState=function(){var collapsers=document.getElementsByClassName("collapser");for(var i=collapsers.length-1;i>=0;i--){var collapsed=collapsers[i].parentNode.getElementsByClassName("collapsible")[0];if(state[collapsers[i].getAttribute("data-collapser")]&&state[collapsers[i].getAttribute("data-collapser")]==="collapsed"){collapsed.parentNode.classList.add("collapsed")}}};return{jsonToHtml:jsonToHtml,pinToTop:pinToTop,onToggle:onToggle,setState:setState}}();if(typeof koInspector=="undefined"){koInspector={}}koInspector.guid={s4:function(){return Math.floor((1+Math.random())*65536).toString(16).substring(1)},create:function(){return koInspector.guid.s4()+koInspector.guid.s4()+"-"+koInspector.guid.s4()+"-"+koInspector.guid.s4()+"-"+koInspector.guid.s4()+"-"+koInspector.guid.s4()+koInspector.guid.s4()+koInspector.guid.s4()}};